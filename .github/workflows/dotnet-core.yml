name: Build & Test

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**/*'
      - 'docs_source/**/*'
  pull_request:
    paths-ignore:
      - 'docs/**/*'
      - 'docs_source/**/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: restore submodules
        run: git submodule update --init
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal --logger:"junit;LogFileName=test-results.xml"
      - name: Upload DLLs for analysis
        uses: actions/upload-artifact@v2
        with:
          name: DLLs
          path: '**/bin/Release/*/*.dll'
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: '**/*/test-results.xml'

  test-results:
    runs-on: ubuntu-latest
    needs: build
    if: success() || failure()
    name: Publish Unit Test Results
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: '**/*/test-results.xml'

  analyze-more:
    needs: build
    name: Analyze Json.More.Net 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze more
        id: analyze-more
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/Json.More/bin/Release/netstandard2.0/Json.More.dll -o semver-report-more.md -c build/semver_config.json -p Json.More.Net --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-more.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-more.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}

        # Report
      - if: steps.analyze-more.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-more.outputs.REPORT }}

  analyze-patch:
    needs: build
    name: Analyze JsonPatch.Net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze patch
        id: analyze-patch
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/JsonPatch/bin/Release/netstandard2.0/JsonPatch.dll -o semver-report-patch.md -c build/semver_config.json -p JsonPatch.Net --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-patch.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-patch.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}
      
        # Report
      - if: steps.analyze-patch.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-patch.outputs.REPORT }}

  analyze-path:
    needs: build
    name: Analyze JsonPath.Net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze path
        id: analyze-path
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/JsonPath/bin/Release/netstandard2.1/JsonPath.Net.dll -o semver-report-path.md -c build/semver_config.json --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-path.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-path.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}

        # Report
      - if: steps.analyze-path.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-path.outputs.REPORT }}

  analyze-pointer:
    needs: build
    name: Analyze JsonPointer.Net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze pointer
        id: analyze-poitner
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/JsonPointer/bin/Release/netstandard2.0/JsonPointer.Net.dll -o semver-report-pointer.md -c build/semver_config.json --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-pointer.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-pointer.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}

        # Report
      - if: steps.analyze-pointer.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-pointer.outputs.REPORT }}

  analyze-schema:
    needs: build
    name: Analyze JsonSchema.Net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze schema
        id: analyze-schema
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/JsonSchema/bin/Release/netstandard2.0/JsonSchema.Net.dll -o semver-report-schema.md -c build/semver_config.json --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-schema.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-schema.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}

        # Report
      - if: steps.analyze-schema.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-schema.outputs.REPORT }}

  analyze-schema-gen:
    needs: build
    name: Analyze JsonSchema.Net.Generation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

        # Set up
      - name: Create local manifest file
        if: github.event_name == 'pull_request'
        run: dotnet new tool-manifest
      - name: Install analyzer
        if: github.event_name == 'pull_request'
        run: dotnet tool install SemVerAnalyzer

      - name: Analyze schema generation
        id: analyze-schema-generation
        if: github.event_name == 'pull_request'
        # multiline comment support details: https://github.community/t/set-output-truncates-multiline-strings/16852/3
        run: |
          dotnet analyze-semver -a artifacts/DLLs/JsonSchema.Generation/bin/Release/netstandard2.0/JsonSchema.Net.Generation.dll -o semver-report-schema-gen.md -c build/semver_config.json --include-header
          unset HAS_REPORT
          unset REPORT
          if [ -s semver-report-schema-gen.md ]
          then
            HAS_REPORT='true'
            REPORT=$(<semver-report-schema-gen.md)
            REPORT="${REPORT//'%'/'%25'}"
            REPORT="${REPORT//$'\n'/'%0A'}"
            REPORT="${REPORT//$'\r'/'%0D'}"
            echo "::set-output name=REPORT::${REPORT}"
          fi
          echo ::set-output name=HAS_REPORT::${HAS_REPORT}

        # Report
      - if: steps.analyze-schema-generation.outputs.HAS_REPORT
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ${{ steps.analyze-schema-generation.outputs.REPORT }}
