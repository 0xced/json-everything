# https://github.com/marketplace/actions/publish-nuget
name: Publish JsonSchema.Net
on:
  push:
    branches:
      - master # Default release branch
    paths:
      - JsonSchema/**
  workflow_dispatch:

jobs:
  publish-core:
    name: build, pack & publish core package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      # Publish
      - name: publish schema
        id: publish_schema
        uses: alirezanet/publish-nuget@v3.0.0
        with:
          PROJECT_FILE_PATH: JsonSchema/JsonSchema.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          INCLUDE_SYMBOLS: true
          TAG_FORMAT: schema-v*
      - name: archive packages
        uses: actions/upload-artifact@v2
        with:
          name: archive-packages
          path: |
            **/*.nupkg
            **/*.snupkg
  build-localizations:
    name: build localizations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: get-localized-nuspecs
        run: |
          NUSPEC_FILES=$(echo -n '[' ; ls nuspec/ --format=commas|sed -e 's/^/\"/'|sed -e 's/,$/\",/'|sed -e 's/\([^,]\)$/\1\"\]/'|sed -e 's/, /\", \"/g')
          echo "::set-output name=NUSPEC_FILES::${NUSPEC_FILES}"
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      # Publish
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        # Localization build automatically moves localization DLLs into nuspec/ folder
        run: dotnet build --configuration Localization --no-restore
      - name: archive packages
        uses: actions/upload-artifact@v2
        with:
          name: localization-artifacts
          path: nuspec/**/*
    outputs:
      matrix: ${{ steps.get-localized-nuspecs.outputs.matrix }}
  publish-localizations:
    needs: build-localizations
    name: build, pack & publish localizations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nuspec: ${{ fromJson(needs.build-localizations.outputs.matrix) }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: '6.x'
      - name: publish localization
        run: |
          nuget pack ${{ matrix.nuspec }} -OutputDirectory nupkg/
      - name: archive packages
        uses: actions/upload-artifact@v2
        with:
          name: archive-packages
          path: nupkg/*.nupkg
