@page "/json-more"
@using JsonEverythingNet.Services
@using Radzen
@using Radzen.Blazor
@using Json.More
@using Yaml2JsonNode

<PageTitle>JSON Utilities - json-everything.net</PageTitle>


<div class="row fill-remaining">
	<RadzenPanelMenu class="col-2 mh-100 mw-content" Click="SetPagePath">
		<RadzenPanelMenuItem Text="Documentation" Icon="article" Expanded="true">
		<RadzenPanelMenuItem Text="Json.More.Net" Value="@("json-more")"
		                     Path="@(_pageName + "#" + AnchorRegistry.GetFirstFragment("json-more"))"/>
		<RadzenPanelMenuItem Text="Yaml2JsonNode" Value="@("yaml")"
		                     Path="@(_pageName + "#" + AnchorRegistry.GetFirstFragment("yaml"))"/>
		</RadzenPanelMenuItem>
		<RadzenPanelMenuItem Text="Release Notes" Icon="format_list_numbered" Expanded="true">
		<RadzenPanelMenuItem Text="Json.More.Net" Value="@("release-notes/json-more")"
		                     Path="@(_pageName + "#" + AnchorRegistry.GetFirstFragment("release-notes/json-more"))" />
		<RadzenPanelMenuItem Text="Yaml2JsonNode" Value="@("release-notes/yaml")"
		                     Path="@(_pageName + "#" + AnchorRegistry.GetFirstFragment("release-notes/yaml"))" />
		</RadzenPanelMenuItem>
		<RadzenPanelMenuItem Text="API Reference" Icon="format_list_numbered" Expanded="true">
			<ApiIndex AssemblyContaining="@typeof(JsonElementEqualityComparer)"/>
			<ApiIndex AssemblyContaining="@typeof(YamlConverter)"/>
		</RadzenPanelMenuItem>
	</RadzenPanelMenu>
	<div class="col-8-stretch mh-100 scroll">
		<div class="navbar me-2">
			<div class="align-items-center hstack mx-2">
				<h1 class="display-4">JSON Utilities</h1>
				<div class="align-items-center mx-3">
					Helpers and extended support for System.Text.Json models.
				</div>
			</div>
			<div class="align-items-center mt-1">
				@foreach (var library in _libraries)
				{
					<NugetLibrary Library="library"/>
				}
			</div>
		</div>
		<div class="ms-4">
			<Docs @ref="_docs" Page="json-more"/>
		</div>
	</div>
</div>

@code {
	private const string _pageName = "json-more";
#pragma warning disable CS8618
	private readonly List<LibraryVersion> _libraries = new()
	{
		LibraryVersion.GetFor<JsonElementEqualityComparer>(),
		LibraryVersion.GetFor(typeof(YamlConverter))
	};
	private Docs _docs;
#pragma warning restore CS8618

	private async Task SetPagePath(MouseEventArgs args)
	{
		if (args is not MenuItemEventArgs menuArgs) return;

		var page = (string?)menuArgs.Value;
		if (page == null) return;

		await _docs.SetPage(page);
	}
}