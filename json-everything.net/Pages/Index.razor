@page "/"
@using System.Text.Json
@using JsonEverythingNet.Models

@inject HttpClient Client

<PageTitle>json-everything</PageTitle>

<div class="text-center">
	<h1 class="display-4 mt-5 mb-4">
		<span class="font-monospace text-muted">json-everything</span>
	</h1>
	<p class="lead mb-5">Extended JSON support in .Net built on top of the System.Text.Json namespace</p>
	<Banner Content="All libraries now support .Net 8 and Native AOT!!"></Banner>
	
	<p class="lead mb-5">Thank you to the major sponsors of this project:</p>
	<div class="div-hcenter">
		<SponsorCloud @ref="_cloud" Data="@SponsorData"></SponsorCloud>
	</div>
</div>

@code {
	private static readonly JsonSerializerOptions _options = new()
	{
		PropertyNameCaseInsensitive = true
	};

	private SponsorCloud _cloud;

	public IReadOnlyList<SponsorData> SponsorData { get; set; } = [];

	protected override async Task OnInitializedAsync()
	{
		var content = await Client.GetStringAsync("data/sponsor-data.json");
		var sponsorData = JsonSerializer.Deserialize<List<SponsorData>>(content, _options)!;

		await FillImageData(sponsorData);

		SponsorData = sponsorData;

		await base.OnInitializedAsync();
	}

	private async Task FillImageData(List<SponsorData> sponsorData)
	{
		foreach (var data in sponsorData)
		{
			if (data.AvatarUrl is null) continue;

			var content = await Client.GetByteArrayAsync(data.AvatarUrl);
			if (content.Length is not 0)
				data.ImageData = content;
		}
	}
}